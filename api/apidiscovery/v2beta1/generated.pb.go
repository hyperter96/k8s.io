//
//Copyright The Kubernetes Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: github.com/hyperter96/k8s.io/api/apidiscovery/v2beta1/generated.proto

package v2beta1

import (
	v1 "github.com/hyperter96/k8s.io/apimachinery/pkg/apis/meta/v1"
	_ "github.com/hyperter96/k8s.io/apimachinery/pkg/runtime"
	_ "github.com/hyperter96/k8s.io/apimachinery/pkg/runtime/schema"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// APIGroupDiscovery holds information about which resources are being served for all version of the API Group.
// It contains a list of APIVersionDiscovery that holds a list of APIResourceDiscovery types served for a version.
// Versions are in descending order of preference, with the first version being the preferred entry.
type APIGroupDiscovery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Standard object's metadata.
	// The only field completed will be name. For instance, resourceVersion will be empty.
	// name is the name of the API group whose discovery information is presented here.
	// name is allowed to be "" to represent the legacy, ungroupified resources.
	// More info: https://git.github.com.hyperter96.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// versions are the versions supported in this group. They are sorted in descending order of preference,
	// with the preferred version being the first entry.
	// +listType=map
	// +listMapKey=version
	Versions []*APIVersionDiscovery `protobuf:"bytes,2,rep,name=versions" json:"versions,omitempty"`
}

func (x *APIGroupDiscovery) Reset() {
	*x = APIGroupDiscovery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIGroupDiscovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIGroupDiscovery) ProtoMessage() {}

func (x *APIGroupDiscovery) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIGroupDiscovery.ProtoReflect.Descriptor instead.
func (*APIGroupDiscovery) Descriptor() ([]byte, []int) {
	return file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescGZIP(), []int{0}
}

func (x *APIGroupDiscovery) GetMetadata() *v1.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *APIGroupDiscovery) GetVersions() []*APIVersionDiscovery {
	if x != nil {
		return x.Versions
	}
	return nil
}

// APIGroupDiscoveryList is a resource containing a list of APIGroupDiscovery.
// This is one of the types able to be returned from the /api and /apis endpoint and contains an aggregated
// list of API resources (built-ins, Custom Resource Definitions, resources from aggregated servers)
// that a cluster supports.
type APIGroupDiscoveryList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ResourceVersion will not be set, because this does not have a replayable ordering among multiple apiservers.
	// More info: https://git.github.com.hyperter96.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// items is the list of groups for discovery. The groups are listed in priority order.
	Items []*APIGroupDiscovery `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (x *APIGroupDiscoveryList) Reset() {
	*x = APIGroupDiscoveryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIGroupDiscoveryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIGroupDiscoveryList) ProtoMessage() {}

func (x *APIGroupDiscoveryList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIGroupDiscoveryList.ProtoReflect.Descriptor instead.
func (*APIGroupDiscoveryList) Descriptor() ([]byte, []int) {
	return file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescGZIP(), []int{1}
}

func (x *APIGroupDiscoveryList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *APIGroupDiscoveryList) GetItems() []*APIGroupDiscovery {
	if x != nil {
		return x.Items
	}
	return nil
}

// APIResourceDiscovery provides information about an API resource for discovery.
type APIResourceDiscovery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// resource is the plural name of the resource.  This is used in the URL path and is the unique identifier
	// for this resource across all versions in the API group.
	// Resources with non-empty groups are located at /apis/<APIGroupDiscovery.objectMeta.name>/<APIVersionDiscovery.version>/<APIResourceDiscovery.Resource>
	// Resources with empty groups are located at /api/v1/<APIResourceDiscovery.Resource>
	Resource *string `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
	// responseKind describes the group, version, and kind of the serialization schema for the object type this endpoint typically returns.
	// APIs may return other objects types at their discretion, such as error conditions, requests for alternate representations, or other operation specific behavior.
	// This value will be null if an APIService reports subresources but supports no operations on the parent resource
	ResponseKind *v1.GroupVersionKind `protobuf:"bytes,2,opt,name=responseKind" json:"responseKind,omitempty"`
	// scope indicates the scope of a resource, either Cluster or Namespaced
	Scope *string `protobuf:"bytes,3,opt,name=scope" json:"scope,omitempty"`
	// singularResource is the singular name of the resource.  This allows clients to handle plural and singular opaquely.
	// For many clients the singular form of the resource will be more understandable to users reading messages and should be used when integrating the name of the resource into a sentence.
	// The command line tool kubectl, for example, allows use of the singular resource name in place of plurals.
	// The singular form of a resource should always be an optional element - when in doubt use the canonical resource name.
	SingularResource *string `protobuf:"bytes,4,opt,name=singularResource" json:"singularResource,omitempty"`
	// verbs is a list of supported API operation types (this includes
	// but is not limited to get, list, watch, create, update, patch,
	// delete, deletecollection, and proxy).
	// +listType=set
	Verbs []string `protobuf:"bytes,5,rep,name=verbs" json:"verbs,omitempty"`
	// shortNames is a list of suggested short names of the resource.
	// +listType=set
	ShortNames []string `protobuf:"bytes,6,rep,name=shortNames" json:"shortNames,omitempty"`
	// categories is a list of the grouped resources this resource belongs to (e.g. 'all').
	// Clients may use this to simplify acting on multiple resource types at once.
	// +listType=set
	Categories []string `protobuf:"bytes,7,rep,name=categories" json:"categories,omitempty"`
	// subresources is a list of subresources provided by this resource. Subresources are located at /apis/<APIGroupDiscovery.objectMeta.name>/<APIVersionDiscovery.version>/<APIResourceDiscovery.Resource>/name-of-instance/<APIResourceDiscovery.subresources[i].subresource>
	// +listType=map
	// +listMapKey=subresource
	Subresources []*APISubresourceDiscovery `protobuf:"bytes,8,rep,name=subresources" json:"subresources,omitempty"`
}

func (x *APIResourceDiscovery) Reset() {
	*x = APIResourceDiscovery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResourceDiscovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResourceDiscovery) ProtoMessage() {}

func (x *APIResourceDiscovery) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResourceDiscovery.ProtoReflect.Descriptor instead.
func (*APIResourceDiscovery) Descriptor() ([]byte, []int) {
	return file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescGZIP(), []int{2}
}

func (x *APIResourceDiscovery) GetResource() string {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return ""
}

func (x *APIResourceDiscovery) GetResponseKind() *v1.GroupVersionKind {
	if x != nil {
		return x.ResponseKind
	}
	return nil
}

func (x *APIResourceDiscovery) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

func (x *APIResourceDiscovery) GetSingularResource() string {
	if x != nil && x.SingularResource != nil {
		return *x.SingularResource
	}
	return ""
}

func (x *APIResourceDiscovery) GetVerbs() []string {
	if x != nil {
		return x.Verbs
	}
	return nil
}

func (x *APIResourceDiscovery) GetShortNames() []string {
	if x != nil {
		return x.ShortNames
	}
	return nil
}

func (x *APIResourceDiscovery) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *APIResourceDiscovery) GetSubresources() []*APISubresourceDiscovery {
	if x != nil {
		return x.Subresources
	}
	return nil
}

// APISubresourceDiscovery provides information about an API subresource for discovery.
type APISubresourceDiscovery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// subresource is the name of the subresource.  This is used in the URL path and is the unique identifier
	// for this resource across all versions.
	Subresource *string `protobuf:"bytes,1,opt,name=subresource" json:"subresource,omitempty"`
	// responseKind describes the group, version, and kind of the serialization schema for the object type this endpoint typically returns.
	// Some subresources do not return normal resources, these will have null return types.
	ResponseKind *v1.GroupVersionKind `protobuf:"bytes,2,opt,name=responseKind" json:"responseKind,omitempty"`
	// acceptedTypes describes the kinds that this endpoint accepts.
	// Subresources may accept the standard content types or define
	// custom negotiation schemes. The list may not be exhaustive for
	// all operations.
	// +listType=map
	// +listMapKey=group
	// +listMapKey=version
	// +listMapKey=kind
	AcceptedTypes []*v1.GroupVersionKind `protobuf:"bytes,3,rep,name=acceptedTypes" json:"acceptedTypes,omitempty"`
	// verbs is a list of supported API operation types (this includes
	// but is not limited to get, list, watch, create, update, patch,
	// delete, deletecollection, and proxy). Subresources may define
	// custom verbs outside the standard Kubernetes verb set. Clients
	// should expect the behavior of standard verbs to align with
	// Kubernetes interaction conventions.
	// +listType=set
	Verbs []string `protobuf:"bytes,4,rep,name=verbs" json:"verbs,omitempty"`
}

func (x *APISubresourceDiscovery) Reset() {
	*x = APISubresourceDiscovery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APISubresourceDiscovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APISubresourceDiscovery) ProtoMessage() {}

func (x *APISubresourceDiscovery) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APISubresourceDiscovery.ProtoReflect.Descriptor instead.
func (*APISubresourceDiscovery) Descriptor() ([]byte, []int) {
	return file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescGZIP(), []int{3}
}

func (x *APISubresourceDiscovery) GetSubresource() string {
	if x != nil && x.Subresource != nil {
		return *x.Subresource
	}
	return ""
}

func (x *APISubresourceDiscovery) GetResponseKind() *v1.GroupVersionKind {
	if x != nil {
		return x.ResponseKind
	}
	return nil
}

func (x *APISubresourceDiscovery) GetAcceptedTypes() []*v1.GroupVersionKind {
	if x != nil {
		return x.AcceptedTypes
	}
	return nil
}

func (x *APISubresourceDiscovery) GetVerbs() []string {
	if x != nil {
		return x.Verbs
	}
	return nil
}

// APIVersionDiscovery holds a list of APIResourceDiscovery types that are served for a particular version within an API Group.
type APIVersionDiscovery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version is the name of the version within a group version.
	Version *string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	// resources is a list of APIResourceDiscovery objects for the corresponding group version.
	// +listType=map
	// +listMapKey=resource
	Resources []*APIResourceDiscovery `protobuf:"bytes,2,rep,name=resources" json:"resources,omitempty"`
	// freshness marks whether a group version's discovery document is up to date.
	// "Current" indicates the discovery document was recently
	// refreshed. "Stale" indicates the discovery document could not
	// be retrieved and the returned discovery document may be
	// significantly out of date. Clients that require the latest
	// version of the discovery information be retrieved before
	// performing an operation should not use the aggregated document
	Freshness *string `protobuf:"bytes,3,opt,name=freshness" json:"freshness,omitempty"`
}

func (x *APIVersionDiscovery) Reset() {
	*x = APIVersionDiscovery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIVersionDiscovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIVersionDiscovery) ProtoMessage() {}

func (x *APIVersionDiscovery) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIVersionDiscovery.ProtoReflect.Descriptor instead.
func (*APIVersionDiscovery) Descriptor() ([]byte, []int) {
	return file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescGZIP(), []int{4}
}

func (x *APIVersionDiscovery) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *APIVersionDiscovery) GetResources() []*APIResourceDiscovery {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *APIVersionDiscovery) GetFreshness() string {
	if x != nil && x.Freshness != nil {
		return *x.Freshness
	}
	return ""
}

var File_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto protoreflect.FileDescriptor

var file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDesc = []byte{
	0x0a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70,
	0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36, 0x2f, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f,
	0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36, 0x2e, 0x6b,
	0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x4a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x65, 0x72,
	0x74, 0x65, 0x72, 0x39, 0x36, 0x2f, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x45, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x74, 0x65, 0x72, 0x39,
	0x36, 0x2f, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79,
	0x70, 0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36, 0x2f, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xdf, 0x01, 0x0a, 0x11, 0x41, 0x50, 0x49, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x62, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36, 0x2e,
	0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x66, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x74, 0x65,
	0x72, 0x39, 0x36, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xd9, 0x01, 0x0a, 0x15, 0x41, 0x50, 0x49, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72,
	0x74, 0x65, 0x72, 0x39, 0x36, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x74,
	0x65, 0x72, 0x39, 0x36, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x32, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb0, 0x03,
	0x0a, 0x14, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x70, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36,
	0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x69,
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x72, 0x0a, 0x0c,
	0x73, 0x75, 0x62, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x68, 0x79, 0x70, 0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x53, 0x75,
	0x62, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x22, 0xb7, 0x02, 0x0a, 0x17, 0x41, 0x50, 0x49, 0x53, 0x75, 0x62, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x75, 0x62, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x70,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36, 0x2e, 0x6b, 0x38, 0x73,
	0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69,
	0x6e, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x72, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36, 0x2e,
	0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x13, 0x41,
	0x50, 0x49, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70,
	0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x74, 0x65, 0x72, 0x39, 0x36, 0x2f, 0x6b,
	0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x32, 0x62, 0x65, 0x74, 0x61, 0x31,
}

var (
	file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescOnce sync.Once
	file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescData = file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDesc
)

func file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescGZIP() []byte {
	file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescOnce.Do(func() {
		file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescData)
	})
	return file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDescData
}

var file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_goTypes = []interface{}{
	(*APIGroupDiscovery)(nil),       // 0: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIGroupDiscovery
	(*APIGroupDiscoveryList)(nil),   // 1: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIGroupDiscoveryList
	(*APIResourceDiscovery)(nil),    // 2: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIResourceDiscovery
	(*APISubresourceDiscovery)(nil), // 3: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APISubresourceDiscovery
	(*APIVersionDiscovery)(nil),     // 4: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIVersionDiscovery
	(*v1.ObjectMeta)(nil),           // 5: github.com.hyperter96.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	(*v1.ListMeta)(nil),             // 6: github.com.hyperter96.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	(*v1.GroupVersionKind)(nil),     // 7: github.com.hyperter96.k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind
}
var file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_depIdxs = []int32{
	5, // 0: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIGroupDiscovery.metadata:type_name -> github.com.hyperter96.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	4, // 1: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIGroupDiscovery.versions:type_name -> github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIVersionDiscovery
	6, // 2: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIGroupDiscoveryList.metadata:type_name -> github.com.hyperter96.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	0, // 3: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIGroupDiscoveryList.items:type_name -> github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIGroupDiscovery
	7, // 4: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIResourceDiscovery.responseKind:type_name -> github.com.hyperter96.k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind
	3, // 5: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIResourceDiscovery.subresources:type_name -> github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APISubresourceDiscovery
	7, // 6: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APISubresourceDiscovery.responseKind:type_name -> github.com.hyperter96.k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind
	7, // 7: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APISubresourceDiscovery.acceptedTypes:type_name -> github.com.hyperter96.k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind
	2, // 8: github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIVersionDiscovery.resources:type_name -> github.com.hyperter96.k8s.io.api.apidiscovery.v2beta1.APIResourceDiscovery
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_init() }
func file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_init() {
	if File_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIGroupDiscovery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIGroupDiscoveryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResourceDiscovery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APISubresourceDiscovery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIVersionDiscovery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_goTypes,
		DependencyIndexes: file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_depIdxs,
		MessageInfos:      file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_msgTypes,
	}.Build()
	File_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto = out.File
	file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_rawDesc = nil
	file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_goTypes = nil
	file_github_com_hyperter96_k8s_io_api_apidiscovery_v2beta1_generated_proto_depIdxs = nil
}
